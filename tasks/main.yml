---

# file: tasks/main.yml

- name: EMACS | check if install exists
  stat:
    path: "{{ emacs_install_dir }}/bin/{{ emacs_version }}"
  register: emacs_exists

- name: EMACS | Get EMACS sources
  become: true
  get_url: url={{emacs_url}} dest={{emacs_tmp}} timeout=180 force=no
  when: not emacs_exists.stat.exists
  register: emacs_downloaded

- name: EMACS | Extract EMACS sources
  become: true
  unarchive: src={{emacs_tmp}}
             dest="/tmp"
             creates={{emacs_build}}
             remote_src=yes
  when: emacs_downloaded.changed
  register: emacs_extract

- name: GCC | Make build folder
  become: true
  file: path={{gcc_build_dir}} state=directory
  when: gcc_extract.changed

- name: EMACS | make emacs configure file
  command: ./autogen.sh chdir="{{ emacs_tmp }}_{{emacs_version}}"
  when: emacs_downloaded.changed
  register: emacs_autogen

- name: EMACS | configure emacs Makefile
  command: ./configure --prefix="{{ emacs_install_dir }}"
           --without-makeinfo
           --with-x-toolkit=no
           --without-x
           --with-file-notification=inotify
           --with-json
           --without-all
           chdir="{{ emacs_tmp }}_{{emacs_version}}"
  when: emacs_autogen.changed
  register: emacs_configure

- name: EMACS | make and install emacs
  command: make install chdir="{{ emacs_tmp }}_{{emacs_version}}"
  become: true
  when: emacs_configure.changed
  register: emacs_install

- name: EMACS | cleanup tmp
  become: true
  file:
    path: "{{ emacs_tmp }}"
    state: absent
  when: emacs_install.changed
...
