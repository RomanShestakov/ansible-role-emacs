---

# file: tasks/main.yml

- name: EMACS | check if install exists
  stat:
    path: "{{ emacs_install_dir }}"
  register: emacs_exists

- name: EMACS | get emacs from git repository
  git: repo={{ emacs_repo_url }}
       dest="{{ emacs_tmp }}_{{emacs_version}}"
       version={{ emacs_version }}
       update=no
       force=yes
  ignore_errors: yes
  when: not emacs_exists.stat.exists
  register: emacs_downloaded

# https://stackoverflow.com/questions/34829765/ansible-git-module-clone-of-repository-while-re-run-is-throwing-exception
- name: EMACS | Only allow the expected failure
  assert:
    that: "not emacs_downloaded['failed'] or 'already exists and is not an empty directory' in emacs_downloaded['msg'].lower()"

- name: EMACS | make emacs configure file
  command: ./autogen.sh chdir="{{ emacs_tmp }}_{{emacs_version}}"
  when: emacs_downloaded.changed
  register: emacs_autogen

- name: EMACS | configure emacs Makefile
  command: ./configure --prefix=/usr/local
           --without-makeinfo
           --with-x-toolkit=no
           --without-x
           --with-file-notification=inotify
           chdir="{{ emacs_tmp }}_{{emacs_version}}"
  when: emacs_autogen.changed
  register: emacs_configure

- name: EMACS | make and install emacs
  command: make install chdir="{{ emacs_tmp }}_{{emacs_version}}"
  become: true
  when: emacs_configure.changed
  register: emacs_install

- name: EMACS | cleanup build
  become: true
  file:
    path: "{{ emacs_build_dir }}"
    state: absent
  when: emacs_install.changed

- name: EMACS | cleanup tmp
  become: true
  file:
    path: "{{ emacs_tmp }}"
    state: absent
  when: emacs_install.changed
...
